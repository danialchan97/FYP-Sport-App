{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Register\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-list>\\n\\n\\t  <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Admin ID</ion-label>\\n\\t    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"adminID\\\"></ion-input>\\n    </ion-item>\\n    \\n    <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Admin Name</ion-label>\\n\\t    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"adminName\\\"></ion-input>\\n\\t  </ion-item>\\n\\n\\t  <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Password</ion-label>\\n\\t    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"adminPass\\\"></ion-input>\\n\\t  </ion-item>\\n\\n\\t  <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n\\t    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"adminPass1\\\"></ion-input>\\n\\t  </ion-item>\\n\\n\\t</ion-list>\\n\\n\\t<div>\\n\\t  <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" (click)=\\\"register()\\\">Register</ion-button>\\n\\t  <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" fill=\\\"outline\\\" (click)=\\\"formLogin()\\\">Sign In</ion-button>\\n\\t</div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  adminID: string = \"\";\n  adminName: string = \"\";\n  adminPass: string = \"\";\n  adminPass1: string = \"\";\n\n  constructor(\n  \tprivate router: Router,\n  \tprivate postPvdr: PostProvider,\n  \tpublic toastCtrl: ToastController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async register(){\n\n    // validation done\n    if(this.adminID==\"\"){\n      const toast = await this.toastCtrl.create({\n        message: 'ID is required',\n        duration: 3000\n      });\n      toast.present();\n    }\n    else if(this.adminName==\"\"){\n      const toast = await this.toastCtrl.create({\n        message: 'Name is required',\n        duration: 3000\n      });\n      toast.present();\n  }\n  else if(this.adminPass==\"\"){\n    const toast = await this.toastCtrl.create({\n      message: 'Password is required',\n      duration: 3000\n    });\n    toast.present();\n}\nelse if(this.adminPass!=this.adminPass1){\n  const toast = await this.toastCtrl.create({\n    message: 'Password does not match!',\n    duration: 3000\n  });\n  toast.present();\n}\nelse{\n\n  let body = {\n    adminID: this.adminID,\n    adminName: this.adminName,\n    adminPass: this.adminPass,\n    aksi: 'register'\n  };\n\n  this.postPvdr.postData(body, 'process-api.php').subscribe(async data =>{\n    var alertpesan = data.msg;\n    if(data.success){\n      this.router.navigate(['/home']);\n      const toast = await this.toastCtrl.create({\n        message: 'Register succesful',\n        duration: 3000\n      });\n      toast.present();\n    }else{\n      const toast = await this.toastCtrl.create({\n        message: alertpesan,\n        duration: 3000\n      });\n      toast.present();\n    }\n  });\n\n}\n\n    \n  }\n\n}\n"],"sourceRoot":""}
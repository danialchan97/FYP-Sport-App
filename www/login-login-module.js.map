{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,g4B;;;;;;;;;;;ACAA,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACkB;AACV;AACR;AAOzC;IASE,mBACS,MAAc,EACd,QAAsB,EACtB,SAA0B,EACzB,OAAgB;QAHjB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAc;QACtB,cAAS,GAAT,SAAS,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAS;IACtB,CAAC;IAEL,4BAAQ,GAAR;IACA,CAAC;IAEK,yBAAK,GAAX;;;;;;;6BACK,KAAI,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,GAA1C,wBAA0C;wBAG3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAExB,IAAI,GAAG;4BACT,OAAO,EAAE,IAAI,CAAC,OAAO;4BACrB,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,IAAI,EAAE,OAAO;yBACd,CAAC;wBAEF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,SAAS,CAAC,UAAM,IAAI;;;;;wCAC9D,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;6CACvB,IAAI,CAAC,OAAO,EAAZ,wBAAY;wCACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;wCAEzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;wCACxB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gDAC9C,OAAO,EAAE,oBAAoB;gDAC9B,QAAQ,EAAE,IAAI;6CACd,CAAC;;wCAHU,KAAK,GAAG,SAGlB;wCACF,KAAK,CAAC,OAAO,EAAE,CAAC;wCAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;wCAClB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;4CAGA,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4CAC9C,OAAO,EAAE,UAAU;4CACnB,QAAQ,EAAE,IAAI;yCACf,CAAC;;wCAHU,KAAK,GAAG,SAGlB;wCACC,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;6BAEhB,CAAC,CAAC;;4BAGO,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,sCAAsC;4BAC/C,QAAQ,EAAE,IAAI;yBACb,CAAC;;wBAHM,KAAK,GAAG,SAGd;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;;KAGb;IA/DU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EAWiB,sDAAM;YACJ,wEAAY;YACX,8DAAe;YAChB,sDAAO;OAbf,SAAS,CAiErB;IAAD,gBAAC;CAAA;AAjEqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Login\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<ion-list>\\n\\n\\t  <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Admin ID</ion-label>\\n\\t    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"adminID\\\"></ion-input>\\n\\t  </ion-item>\\n\\n\\t  <ion-item>\\n\\t    <ion-label position=\\\"floating\\\">Password</ion-label>\\n\\t    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"adminPass\\\"></ion-input>\\n\\t  </ion-item>\\n\\n\\t</ion-list>\\n\\n\\t<div>\\n\\t  <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" (click)=\\\"login()\\\">Sign In</ion-button>\\n\\t  <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" fill=\\\"outline\\\" (click)=\\\"formRegister()\\\">Register</ion-button>\\n\\t</div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostProvider } from 'src/providers/post-provider';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/Storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  adminID: string;\n  adminPass: string;\n\n  adminTest: any;\n  name: string;\n\n\n  constructor(\n  \tprivate router: Router,\n  \tprivate postPvdr: PostProvider,\n    public toastCtrl: ToastController,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async login(){\n    if(this.adminID != \"\" && this.adminPass != \"\")\n    {\n\n      console.log(this.adminID);\n      console.log(this.adminPass);\n\n      let body = {\n        adminID: this.adminID,\n        adminPass: this.adminPass,\n        aksi: 'login'\n      };\n\n      this.postPvdr.postData(body, 'process-api.php').subscribe(async data =>{\n        var alertpesan = data.msg;\n        if(data.success){\n          this.storage.set('session', data.result);\n          \n          this.router.navigate(['/home-admin']);\n          const toast = await this.toastCtrl.create({\n\t\t    message: 'Login Succesfully.',\n\t\t  \tduration: 2000\n\t\t  });\n\t\t  toast.present();\n\t\t  this.adminID = \"\";\n\t\t  this.adminPass = \"\";\n\n        }else{\n          const toast = await this.toastCtrl.create({\n\t\t    message: alertpesan,\n\t\t    duration: 2000\n\t\t  });\n    \t  toast.present();\n        }\n      });\n  }\nelse{\n  const toast = await this.toastCtrl.create({\nmessage: 'AdminID and Password cannot be empty',\nduration: 2000\n});\ntoast.present();\n}\n\n  }\n\n}\n"],"sourceRoot":""}